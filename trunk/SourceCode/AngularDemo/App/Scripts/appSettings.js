"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//Contains all the constants of the application.
var AppSettings = (function () {
    function AppSettings() {
    }
    //Public method to validate email id on UI
    AppSettings.validateEmail = function (email) {
        var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(email);
    };
    return AppSettings;
}());
AppSettings.API_END_POINT = "http://192.168.0.101:1300/";
//public static API_END_POINT: string = "http://localhost:56009/";
//public static API_END_POINT: string = "http://192.168.11.63:1300/";
AppSettings.Patient = "patient";
AppSettings.Insurance = "insurance";
AppSettings.PatientInsurance = "patientinsurance";
AppSettings.Login = "login";
AppSettings.Account = "account";
AppSettings.ForgotPassword = "forgotpassword";
AppSettings.ResetPassword = "resetpassword";
AppSettings.Verify = "verify";
AppSettings.LoginStatus = "loginstatus";
AppSettings.AuthCookie = "httpCookie";
AppSettings.UserName = "username";
AppSettings.Password = "password";
AppSettings.GrantType = "grant_type";
AppSettings.OkStatusCode = 200;
AppSettings.InternalServerErrorStatusCode = 500;
AppSettings.BadRequestStatusCode = 400;
AppSettings.UnauthorizedRequestStatusCode = 401;
AppSettings.SuccessStatus = 'Success';
AppSettings.FailedStatus = 'Failed';
AppSettings.Empty = '';
AppSettings.InvalidLoginRequest = "Id or password is wrong";
AppSettings.FirstName = "FirstName";
AppSettings.MiddleName = "MiddleName";
AppSettings.LastName = "LastName";
AppSettings.UserId = "UserId";
AppSettings.UserPassword = "UserPassword";
AppSettings.UserAlreadyExist = "UserAlreadyExist";
AppSettings.Invalid = "Invalid";
AppSettings.AlreadyTaken = "Already taken";
AppSettings.Error = "Error";
AppSettings.Space = " ";
AppSettings.Authorization = "Authorization";
AppSettings.UrlEncoded = "application/x-www-form-urlencoded";
AppSettings.ContentType = "Content-Type";
AppSettings.PatientInsuranceAdded = "Patient insurance added.";
AppSettings.PatientAdded = "Patient added";
AppSettings.InsuranceAdded = "Insurance added";
AppSettings.SomeErrorOccured = "Somme error occured";
AppSettings.ListCouldNotLoad = " list could not load";
AppSettings.PatientId = "PatientId";
AppSettings.InsuranceId = "InsuranceId";
AppSettings.InsurancePublicId = "InsurancePublicId";
AppSettings.Name = "Name";
AppSettings.PhoneNumber = "PhoneNumber";
AppSettings.Address = "Address";
AppSettings.Zero = 0;
AppSettings.Male = "Male";
AppSettings.Female = "Female";
AppSettings.Gender = "Gender";
AppSettings.UserNotVerified = "UserNotVerified";
AppSettings.Handle = "Handle";
AppSettings.VerificationCode = "VerificationCode";
AppSettings.EmailId = "EmailId";
AppSettings.ForgotPasswordFormHeading = "Forgot password";
AppSettings.ResetPasswordFormHeading = "Reset your password";
AppSettings.TextDanger = "text-danger";
AppSettings.TextSuccess = "text-success";
AppSettings.ForgotPasswordRequestCreatedSuccessfully = "Successfully sent mail";
AppSettings.ResetPasswordSuccessful = "Password is reset.";
AppSettings.Save = "Save";
AppSettings.NewPatient = "New patient";
AppSettings.NewInsurance = "New insurance";
AppSettings.ModifyPatient = "Modify patient";
AppSettings.ModifyInsurance = "Modify insurance";
AppSettings.Modify = "Modify";
AppSettings.PatientUpdated = 'Patient updated successfully';
AppSettings.InsuranceUpdated = 'Insurance updated successfully';
AppSettings.PatientInsuranceUpdated = 'Patient insurance updated successfully';
AppSettings.Unauthorized = "Unauthorized";
AppSettings.UnauthorizedPatienEdit = "You can edit only patients created by you.";
AppSettings.UnauthorizedInsuranceEdit = "You can edit only insurances created by you.";
AppSettings.UnauthorizedPatientInsuranceEdit = "You can edit only patient insurances created by you.";
exports.AppSettings = AppSettings;
//# sourceMappingURL=appSettings.js.map